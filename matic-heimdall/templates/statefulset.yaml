apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "matic-heimdall.fullname" . }}
  labels:
    {{- include "matic-heimdall.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "matic-heimdall.selectorLabels" . | nindent 6 }}
  serviceName: {{ include "matic-heimdall.fullname" . }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "matic-heimdall.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "matic-heimdall.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: {{ .Chart.Name }}-init
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["bash"]
          args: ["-c",
                "heimdalld init && 
                cp /root/configmap/app.toml /root/.heimdalld/config/app.toml &&
                cp /root/configmap/config.toml /root/.heimdalld/config/config.toml &&
                cp /root/configmap/heimdall-config.toml /root/.heimdalld/config/heimdall-config.toml &&
                cp /root/configmap/genesis.json /root/.heimdalld/config/genesis.json &&
                cp /root/configmap/mainnet-genesis.json /root/.heimdalld/config/mainnet-genesis.json &&
                cp /root/configmap/testnet-genesis.json /root/.heimdalld/config/testnet-genesis.json"]
          volumeMounts:
            - name: heimdalld
              mountPath: {{ .Values.volumes.heimdalld.mountPath }}
            - name: config
              mountPath: /root/configmap
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["heimdalld", "start"]
          args: 
            {{- toYaml .Values.image.args | nindent 12 }}
          ports:
            - name: listener
              containerPort: {{ .Values.container.ports.listener }}
              protocol: TCP
            - name: rpc
              containerPort: {{ .Values.container.ports.rpc }}
              protocol: TCP
            - name: proxy-app
              containerPort: {{ .Values.container.ports.proxyApp }}
              protocol: TCP
            - name: prometheus
              containerPort: {{ .Values.container.ports.prometheus }}
              protocol: TCP
          volumeMounts:
            - name: heimdalld
              mountPath: {{ .Values.volumes.heimdalld.mountPath }}
        - name: {{ .Chart.Name }}-rest-server
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["heimdalld", "rest-server"]
          args: 
            {{- toYaml .Values.image.args | nindent 12 }}
          ports:
            - name: rest
              containerPort: {{ .Values.container.ports.rest }}
              protocol: TCP
          volumeMounts:
            - name: heimdalld
              mountPath: {{ .Values.volumes.heimdalld.mountPath }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: config
          configMap:
            name: {{ include "matic-heimdall.fullname" . }}-configmap
{{- if and .Values.persistence.enabled .Values.persistence.existingClaim }}
        - name: heimdalld
          persistentVolumeClaim:
{{- with .Values.persistence.existingClaim }}
            claimName: {{ tpl . $ }}
{{- end }}
{{- else if not .Values.persistence.enabled }}
        - name: heimdalld
          emptyDir: {}
{{- else if and .Values.persistence.enabled .Values.persistence.hostPath }}
        - name: heimdalld
          hostPath:
            path: {{ .Values.persistence.hostPath.path }}
            type: {{ .Values.persistence.hostPath.type }}
{{- else if and .Values.persistence.enabled (not .Values.persistence.existingClaim) }}
  volumeClaimTemplates:
    - metadata:
        name: heimdalld
      {{- with .Values.persistence.annotations }}
        annotations:
        {{- range $key, $value := . }}
            {{ $key }}: {{ $value }}
        {{- end }}
      {{- end }}
      spec:
        accessModes:
        {{- range .Values.persistence.accessModes }}
          - {{ . | quote }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.persistence.size | quote }}
        {{ include "matic-heimdall.storageClass" . }}
{{- end }}