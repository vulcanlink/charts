# Default values for geth.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ethereum/client-go
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "v1.9.24"
  command: ["geth"]
  args: [
   "--config",
    "/root/config/config.custom.toml"]

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

volumes:
  data:
    mountPath: /root/.ethereum
  config:
    mountPath:  /root/config

persistence:
  enabled: true
  annotations: {}
  accessModes: 
    - ReadWriteOnce
  size: 20Gi # For mainnet must increase

  ## A manually managed Persistent Volume and Claim
  ## If defined, PVC must be created manually before volume will be bound
  ## The value is evaluated as a template, so, for example, the name can depend on .Release or .Chart
  ##  
  # existingClaim:

  ## An existing directory in the node
  ## If defined, host directory must be created manually before volume will be bound
  ## See https://kubernetes.io/docs/concepts/storage/volumes/#hostpath
  ##  
  # hostPath:
  #   path: /root/.local/share/io.parity.ethereum
  #   type: Directory

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

container:
  ports:
    http: 8545
    ws: 8546
    listener: 30303
    discovery: 30303

service:
  type: ClusterIP
  http: 8545
  ws: 8546

serviceP2P:
  type: NodePort
  listener: 30303
  discovery: 30303

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: 
  geth/role: node

tolerations: []

affinity: {}

config: | 
  [Eth]
  NetworkId = 1