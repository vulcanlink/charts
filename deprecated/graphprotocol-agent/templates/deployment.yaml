apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "graphprotocol-agent.fullname" . }}
  labels:
    {{- include "graphprotocol-agent.labels" . | nindent 4 }}
spec:
{{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
{{- end }}
  selector:
    matchLabels:
      {{- include "graphprotocol-agent.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/configmap.yaml: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "graphprotocol-agent.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "graphprotocol-agent.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: 
            {{- toYaml .Values.image.command | nindent 12 }}
          args: 
            {{- toYaml .Values.image.args | nindent 12 }}
          ports:
            - name: http
              containerPort: {{ .Values.container.ports.http }}
              protocol: TCP
            - name: metrics 
              containerPort: {{ .Values.container.ports.metrics }}
              protocol: TCP
            - name: management
              containerPort: {{ .Values.container.ports.management }}
          envFrom:
            - configMapRef:
                name: {{ include "graphprotocol-agent.fullname" . }}-configmap
          env:
            - name: INDEXER_AGENT_POSTGRES_HOST
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.postgres }}
                  key: host
            - name: INDEXER_AGENT_POSTGRES_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.postgres }}
                  key: user
            - name: INDEXER_AGENT_POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.postgres }}
                  key: password
            - name: INDEXER_AGENT_MNEMONIC
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.mnemonic }}
                  key: mnemonic
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}